<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.admqr.misstory">

    <!-- io.flutter.app.FlutterApplication is an android.app.Application that
         calls FlutterMain.startInitialization(this); in its onCreate method.
         In most cases you can leave this as-is, but you if you want to provide
         additional functionality it is fine to subclass or reimplement
         FlutterApplication and put your custom class here. -->
    <!--保活所需权限-->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS"/>

    <application
        android:name=".App"
        android:label="@string/appName"
        android:icon="@mipmap/ic_launcher"
        tools:replace="android:label">
        <activity
            android:name=".MainActivity"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:screenOrientation="portrait"
            android:windowSoftInputMode="adjustResize">
            <!-- This keeps the window background of the activity showing
                 until Flutter renders its first frame. It can be removed if
                 there is no splash screen (such as the default splash screen
                 defined in @style/LaunchTheme). -->
            <meta-data
                android:name="io.flutter.app.android.SplashScreenUntilFirstFrame"
                android:value="true" />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <!--高德地图apikey-->
        <meta-data
            android:name="com.amap.api.v2.apikey"
            android:value="77419f4f5b07ffcc0a41cafd2fe763af"/>


        <!--保活所需-->
        <service android:name=".MainWorkService"/>

        <receiver
            android:name="com.shihoo.daemon.watch.WakeUpReceiver"
            android:process=":watch">
            <intent-filter>
                <action android:name="android.intent.action.USER_PRESENT"/>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <action android:name="android.intent.action.USER_PRESENT" />
                <action android:name="android.intent.action.MEDIA_MOUNTED" />
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
            </intent-filter>
        </receiver>

        <receiver
            android:name="com.shihoo.daemon.watch.WakeUpReceiver$StartWatchReceiver"
            android:process=":watch">
            <intent-filter>
                <action android:name="com.shihoo.START_JOB_ALARM_SUB"/>
            </intent-filter>
        </receiver>
        <!-- 广播接收者  receiver 进程-->
        <receiver
            android:name="com.shihoo.daemon.watch.WakeUpReceiver$WakeUpAutoStartReceiver"
            android:process=":watch">
            <!-- 手机启动 -->
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED"/>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
            </intent-filter>
            <!-- 软件安装卸载-->
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_ADDED"/>
                <action android:name="android.intent.action.PACKAGE_REMOVED"/>
                <data android:scheme="package"/>
            </intent-filter>
            <!-- 网络监听 -->
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
                <action android:name="android.net.wifi.WIFI_STATE_CJANGED"/>
                <action android:name="android.net.wifi.STATE_CHANGE"/>
            </intent-filter>
            <!-- 文件挂载 -->
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_EJECT"/>
                <action android:name="android.intent.action.MEDIA_MOUNTED"/>
                <data android:scheme="file"/>
            </intent-filter>

        </receiver>

        <!-- 守护进程 watch -->
        <service
            android:name="com.shihoo.daemon.watch.JobSchedulerService"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:enabled="true"
            android:exported="true"
            android:process=":watch"/>

        <service
            android:name="com.shihoo.daemon.watch.WatchDogService"
            android:process=":watch"/>

        <activity
            android:name="com.shihoo.daemon.singlepixel.SinglePixelActivity"
            android:configChanges="keyboardHidden|orientation|screenSize|navigation|keyboard"
            android:excludeFromRecents="true"
            android:finishOnTaskLaunch="false"
            android:launchMode="singleInstance"
            android:theme="@style/SingleActivityStyle"
            />

        <service android:name="com.shihoo.daemon.watch.PlayMusicService"
            android:process=":watch"/>
    </application>
</manifest>
